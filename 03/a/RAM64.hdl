// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
    DMux8Way(in=load, sel=address[3..5], a=a2, b=b2, c=c2, d=d2, e=e2, f=f2, g=g2, h=h2);

    RAM8(in=in, load=a2, address=address[0..2], out=ao);
    RAM8(in=in, load=b2, address=address[0..2], out=bo);
    RAM8(in=in, load=c2, address=address[0..2], out=co);
    RAM8(in=in, load=d2, address=address[0..2], out=do);
    RAM8(in=in, load=e2, address=address[0..2], out=eo);
    RAM8(in=in, load=f2, address=address[0..2], out=fo);
    RAM8(in=in, load=g2, address=address[0..2], out=go);
    RAM8(in=in, load=h2, address=address[0..2], out=ho);

    Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address[3..5], out=out);
}
